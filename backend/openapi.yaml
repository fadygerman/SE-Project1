openapi: "3.1.0"
info:
  title: "Car Rental API"
  description: "Backend API for Car Rental Application"
  version: "0.1.0"
paths:
  /:
    get:
      summary: "Root"
      operationId: "root__get"
      responses:
        "200":
          description: "Successful Response"
          content:
            application/json:
              schema: {}
  /health:
    get:
      summary: "Health Check"
      operationId: "health_check_health_get"
      responses:
        "200":
          description: "Successful Response"
          content:
            application/json:
              schema: {}
  /api/v1/cars/:
    get:
      tags:
        - "cars"
      summary: "Get Cars"
      operationId: "get_cars_api_v1_cars__get"
      responses:
        "200":
          description: "Successful Response"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Car"
                type: "array"
                title: "Response Get Cars Api V1 Cars  Get"
  /api/v1/cars/{car_id}:
    get:
      tags:
        - "cars"
      summary: "Get Car"
      operationId: "get_car_api_v1_cars__car_id__get"
      parameters:
        - name: "car_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Car Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Car"
        "422":
          description: "Validation Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v1/users/:
    get:
      tags:
        - "users"
      summary: "Get Users"
      operationId: "get_users_api_v1_users__get"
      responses:
        "200":
          description: "Successful Response"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/User"
                type: "array"
                title: "Response Get Users Api V1 Users  Get"
  /api/v1/users/{user_id}:
    get:
      tags:
        - "users"
      summary: "Get User"
      operationId: "get_user_api_v1_users__user_id__get"
      parameters:
        - name: "user_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "User Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "422":
          description: "Validation Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v1/bookings/:
    get:
      tags:
        - "bookings"
      summary: "Get Bookings"
      operationId: "get_bookings_api_v1_bookings__get"
      responses:
        "200":
          description: "Successful Response"
          content:
            application/json:
              schema:
                items:
                  $ref: "#/components/schemas/Booking"
                type: "array"
                title: "Response Get Bookings Api V1 Bookings  Get"
    post:
      tags:
        - "bookings"
      summary: "Create Booking"
      operationId: "create_booking_api_v1_bookings__post"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingCreate"
        required: true
      responses:
        "201":
          description: "Successful Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "422":
          description: "Validation Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
  /api/v1/bookings/{booking_id}:
    get:
      tags:
        - "bookings"
      summary: "Get Booking"
      operationId: "get_booking_api_v1_bookings__booking_id__get"
      parameters:
        - name: "booking_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Booking Id"
      responses:
        "200":
          description: "Successful Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "422":
          description: "Validation Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
    put:
      tags:
        - "bookings"
      summary: "Update Booking"
      operationId: "update_booking_api_v1_bookings__booking_id__put"
      parameters:
        - name: "booking_id"
          in: "path"
          required: true
          schema:
            type: "integer"
            title: "Booking Id"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BookingUpdate"
      responses:
        "200":
          description: "Successful Response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Booking"
        "422":
          description: "Validation Error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
components:
  schemas:
    Booking:
      properties:
        id:
          type: "integer"
          title: "Id"
        user_id:
          type: "integer"
          title: "User Id"
          description: "ID of the user making the booking"
        car_id:
          type: "integer"
          title: "Car Id"
          description: "ID of the car being booked"
        start_date:
          type: "string"
          format: "date"
          title: "Start Date"
          description: "Start date of the booking period"
        end_date:
          type: "string"
          format: "date"
          title: "End Date"
          description: "End date of the booking period"
        pickup_date:
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Pickup Date"
          description: "Actual date when car was picked up"
        return_date:
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Return Date"
          description: "Actual date when car was returned"
        total_cost:
          type: "string"
          title: "Total Cost"
          description: "Total cost of the booking"
        status:
          $ref: "#/components/schemas/BookingStatus"
          description: "Current status of the booking"
        user:
          anyOf:
            - $ref: "#/components/schemas/User"
            - type: "null"
          description: "User information"
        car:
          anyOf:
            - $ref: "#/components/schemas/Car"
            - type: "null"
          description: "Car information"
      type: "object"
      required:
        - "id"
        - "user_id"
        - "car_id"
        - "start_date"
        - "end_date"
        - "total_cost"
        - "status"
      title: "Booking"
    BookingCreate:
      properties:
        user_id:
          type: "integer"
          title: "User Id"
          description: "ID of the user making the booking"
        car_id:
          type: "integer"
          title: "Car Id"
          description: "ID of the car being booked"
        start_date:
          type: "string"
          format: "date"
          title: "Start Date"
          description: "Start date of the booking period"
        end_date:
          type: "string"
          format: "date"
          title: "End Date"
          description: "End date of the booking period"
      type: "object"
      required:
        - "user_id"
        - "car_id"
        - "start_date"
        - "end_date"
      title: "BookingCreate"
    BookingStatus:
      type: "string"
      enum:
        - "PLANNED"
        - "ACTIVE"
        - "COMPLETED"
        - "CANCELED"
        - "OVERDUE"
      title: "BookingStatus"
    BookingUpdate:
      properties:
        start_date:
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Start Date"
          description: "Updated start date"
        end_date:
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "End Date"
          description: "Updated end date"
        status:
          anyOf:
            - $ref: "#/components/schemas/BookingStatus"
            - type: "null"
          description: "Updated booking status"
        pickup_date:
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Pickup Date"
          description: "Actual date when car was picked up"
        return_date:
          anyOf:
            - type: "string"
              format: "date"
            - type: "null"
          title: "Return Date"
          description: "Actual date when car was returned"
      type: "object"
      title: "BookingUpdate"
    Car:
      properties:
        id:
          type: "integer"
          title: "Id"
        name:
          type: "string"
          title: "Name"
          description: "Car name/brand"
        model:
          type: "string"
          title: "Model"
          description: "Car model"
        price_per_day:
          type: "string"
          title: "Price Per Day"
          description: "Daily rental price"
        is_available:
          type: "boolean"
          title: "Is Available"
          description: "Whether the car is available for booking"
        latitude:
          anyOf:
            - type: "number"
            - type: "null"
          title: "Latitude"
          description: "Car's current latitude location"
        longitude:
          anyOf:
            - type: "number"
            - type: "null"
          title: "Longitude"
          description: "Car's current longitude location"
      type: "object"
      required:
        - "id"
        - "name"
        - "model"
        - "price_per_day"
        - "is_available"
      title: "Car"
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          type: "array"
          title: "Detail"
      type: "object"
      title: "HTTPValidationError"
    User:
      properties:
        id:
          type: "integer"
          title: "Id"
        first_name:
          type: "string"
          maxLength: 50
          minLength: 1
          title: "First Name"
          description: "User's first name"
        last_name:
          type: "string"
          maxLength: 50
          minLength: 1
          title: "Last Name"
          description: "User's last name"
        email:
          type: "string"
          format: "email"
          title: "Email"
          description: "User's email address"
        phone_number:
          type: "string"
          title: "Phone Number"
          description: "User's phone number"
      type: "object"
      required:
        - "id"
        - "first_name"
        - "last_name"
        - "email"
        - "phone_number"
      title: "User"
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: "string"
              - type: "integer"
          type: "array"
          title: "Location"
        msg:
          type: "string"
          title: "Message"
        type:
          type: "string"
          title: "Error Type"
      type: "object"
      required:
        - "loc"
        - "msg"
        - "type"
      title: "ValidationError"
