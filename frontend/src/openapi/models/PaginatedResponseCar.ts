/* tslint:disable */
/* eslint-disable */
/**
 * Car Rental API
 * Backend API for Car Rental Application
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Car } from './Car';
import {
    CarFromJSON,
    CarFromJSONTyped,
    CarToJSON,
    CarToJSONTyped,
} from './Car';

/**
 * 
 * @export
 * @interface PaginatedResponseCar
 */
export interface PaginatedResponseCar {
    /**
     * 
     * @type {Array<Car>}
     * @memberof PaginatedResponseCar
     */
    items: Array<Car>;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseCar
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseCar
     */
    page: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseCar
     */
    pageSize: number;
    /**
     * 
     * @type {number}
     * @memberof PaginatedResponseCar
     */
    pages: number;
}

/**
 * Check if a given object implements the PaginatedResponseCar interface.
 */
export function instanceOfPaginatedResponseCar(value: object): value is PaginatedResponseCar {
    if (!('items' in value) || value['items'] === undefined) return false;
    if (!('total' in value) || value['total'] === undefined) return false;
    if (!('page' in value) || value['page'] === undefined) return false;
    if (!('pageSize' in value) || value['pageSize'] === undefined) return false;
    if (!('pages' in value) || value['pages'] === undefined) return false;
    return true;
}

export function PaginatedResponseCarFromJSON(json: any): PaginatedResponseCar {
    return PaginatedResponseCarFromJSONTyped(json, false);
}

export function PaginatedResponseCarFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedResponseCar {
    if (json == null) {
        return json;
    }
    return {
        
        'items': ((json['items'] as Array<any>).map(CarFromJSON)),
        'total': json['total'],
        'page': json['page'],
        'pageSize': json['page_size'],
        'pages': json['pages'],
    };
}

export function PaginatedResponseCarToJSON(json: any): PaginatedResponseCar {
    return PaginatedResponseCarToJSONTyped(json, false);
}

export function PaginatedResponseCarToJSONTyped(value?: PaginatedResponseCar | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'items': ((value['items'] as Array<any>).map(CarToJSON)),
        'total': value['total'],
        'page': value['page'],
        'page_size': value['pageSize'],
        'pages': value['pages'],
    };
}

