/* tslint:disable */
/* eslint-disable */
/**
 * Car Rental API
 * Backend API for Car Rental Application
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Car,
  HTTPValidationError,
} from '../models/index';
import {
    CarFromJSON,
    CarToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
} from '../models/index';

export interface GetCarApiV1CarsCarIdGetRequest {
    carId: number;
}

/**
 * 
 */
export class CarsApi extends runtime.BaseAPI {

    /**
     * Get Car
     */
    async getCarApiV1CarsCarIdGetRaw(requestParameters: GetCarApiV1CarsCarIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Car>> {
        if (requestParameters['carId'] == null) {
            throw new runtime.RequiredError(
                'carId',
                'Required parameter "carId" was null or undefined when calling getCarApiV1CarsCarIdGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/cars/{car_id}`.replace(`{${"car_id"}}`, encodeURIComponent(String(requestParameters['carId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CarFromJSON(jsonValue));
    }

    /**
     * Get Car
     */
    async getCarApiV1CarsCarIdGet(requestParameters: GetCarApiV1CarsCarIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Car> {
        const response = await this.getCarApiV1CarsCarIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Get Cars
     */
    async getCarsApiV1CarsGetRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Car>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/cars/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(CarFromJSON));
    }

    /**
     * Get Cars
     */
    async getCarsApiV1CarsGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Car>> {
        const response = await this.getCarsApiV1CarsGetRaw(initOverrides);
        return await response.value();
    }

}
